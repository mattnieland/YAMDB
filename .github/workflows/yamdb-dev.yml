name: yamdb-dev

on:
  push:
    branches:
    - dev
env:  
  SENTRY_ORG: mattnieland
  SENTRY_PROJECT: yamdb
  SENTRY_ENVIRONMENT: Dev
  API_PROJECT_PATH: YAMDB.Api/YAMDB.Api.csproj
  TEST_PROJECT_PATH: YAMDB.Tests/YAMDB.Tests.csproj
  CORE_PROJECT_PATH: YAMDB
  CONFIGURATION: Dev
  DOTNET_CORE_VERSION: 6.0.x  
  IMAGE_NAME: yamdb-dev
  PROJECT_ID: yamdb-dev
    
jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest    
        
    steps: 
    - name: Declare some variables
      id: vars
      shell: bash
      run: |            
        echo "::set-output name=sha::${GITHUB_SHA}"
        
    - name: Checkout            
      uses: actions/checkout@v3

    - name: Create Sentry release
      uses: getsentry/action-release@v1
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: ${{ env.SENTRY_ORG }}
        SENTRY_PROJECT: ${{ env.SENTRY_PROJECT }}
      with:
        environment: ${{ env.SENTRY_ENVIRONMENT }}
        version: ${{ steps.vars.outputs.sha }}
        ignore_empty: true
        ignore_missing: true
      
    - name: Setup dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.dotnet-version }}
        
    - name: Restore
      run: dotnet restore
      
    - name: Build & Publish
      run: dotnet publish ${{ env.API_PROJECT_PATH }} --configuration ${{ env.CONFIGURATION }} --no-restore

    - name: Set Secret Token
      run: dotnet user-secrets set "DOPPLER_TOKEN" "${{ secrets.DOPPLER_DEV_TOKEN }}" --project "${{ env.CORE_PROJECT_PATH }}"
      
    - name: Test
      run: dotnet test ${{ env.TEST_PROJECT_PATH }} --no-restore --verbosity normal
      
    #- name: Login via Azure CLI
    #  uses: azure/login@v1
    #  with:
    #    creds: ${{ secrets.AZURE_CREDENTIALS }}      
        
    #- name: Login to Azure Container Registry
    #  uses: azure/docker-login@v1
    #  with:
    #    login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
    #    username: ${{ secrets.REGISTRY_USERNAME }}
    #    password: ${{ secrets.REGISTRY_PASSWORD }}
        
    #- name: Build & Push Docker Image
    #  run: |
    #    docker build -f YAMDB.Api/Dockerfile -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest  -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
    #    docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
    #    docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest

    #- name: Deploy to Azure Container Instances
    #  uses: 'azure/aci-deploy@v1'
    #  with:
    #    resource-group: ${{ secrets.RESOURCE_GROUP }}
    #    dns-name-label: ${{ env.IMAGE_NAME }}
    #    image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest        
    #    registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
    #    registry-username: ${{ secrets.REGISTRY_USERNAME }}
    #    registry-password: ${{ secrets.REGISTRY_PASSWORD }}
    #    name: ${{ env.IMAGE_NAME }}
    #    location: 'northcentralus'
    #    secure-environment-variables: DOPPLER_TOKEN=${{ secrets.DOPPLER_DEV_TOKEN }}

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
    
    - name: Setup Google Cloud
      uses: google-github-actions/setup-gcloud@v1
      with:        
        project_id: ${{ env.PROJECT_ID }}

    #- name: Automatic Tagging of Releases
    #  id: increment-git-tag
    #  run: |
    #    bash ./scripts/git_update.sh -v major
    
    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker --quiet
        gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
        
    - name: Build & Push Image to Container Registry (GCR)      
      run: |-
        docker build -f YAMDB.Api/Dockerfile -t gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest -t gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

    #- name: Build & Push Image to Artifact Registry      
    #  run: |-
    #    docker build -f YAMDB.Api/Dockerfile -t gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest -t gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .        
    #    docker push us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/images/${{ env.IMAGE_NAME }}:latest
    #    docker push us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/images/${{ env.IMAGE_NAME }}:${{ github.sha }}